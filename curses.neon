%|
 |  File: curses
 |
 |  Curses library for text-oriented user interface support.
 |
 |  Reference:
 |      https://en.wikipedia.org/wiki/Curses_%28programming_library%29
 |%

EXPORT Window

EXPORT CURSES_ERR
EXPORT CURSES_OK
EXPORT A_CHARTEXT
EXPORT A_NORMAL
EXPORT A_ALTCHARSET
EXPORT A_INVIS
EXPORT A_UNDERLINE
EXPORT A_REVERSE
EXPORT A_BLINK
EXPORT A_BOLD
EXPORT A_ATTRIBUTES
EXPORT A_COLOR
EXPORT A_PROTECT
EXPORT ACS_ULCORNER
EXPORT ACS_LLCORNER
EXPORT ACS_URCORNER
EXPORT ACS_LRCORNER
EXPORT ACS_RTEE
EXPORT ACS_LTEE
EXPORT ACS_BTEE
EXPORT ACS_TTEE
EXPORT ACS_HLINE
EXPORT ACS_VLINE
EXPORT ACS_PLUS
EXPORT COLOR_BLACK
EXPORT COLOR_BLUE
EXPORT COLOR_GREEN
EXPORT COLOR_RED
EXPORT COLOR_CYAN
EXPORT COLOR_MAGENTA
EXPORT COLOR_YELLOW
EXPORT COLOR_WHITE
EXPORT KEY_CODE_YES
EXPORT KEY_BREAK
EXPORT KEY_DOWN
EXPORT KEY_UP
EXPORT KEY_LEFT
EXPORT KEY_RIGHT
EXPORT KEY_HOME
EXPORT KEY_BACKSPACE
EXPORT KEY_F0
EXPORT KEY_DL
EXPORT KEY_IL
EXPORT KEY_DC
EXPORT KEY_IC
EXPORT KEY_EIC
EXPORT KEY_CLEAR
EXPORT KEY_EOS
EXPORT KEY_EOL
EXPORT KEY_SF
EXPORT KEY_SR
EXPORT KEY_NPAGE
EXPORT KEY_PPAGE
EXPORT KEY_STAB
EXPORT KEY_CTAB
EXPORT KEY_CATAB
EXPORT KEY_ENTER
EXPORT KEY_SRESET
EXPORT KEY_RESET
EXPORT KEY_PRINT
EXPORT KEY_LL
EXPORT KEY_SHELP
EXPORT KEY_BTAB
EXPORT KEY_BEG
EXPORT KEY_CANCEL
EXPORT KEY_CLOSE
EXPORT KEY_COMMAND
EXPORT KEY_COPY
EXPORT KEY_CREATE
EXPORT KEY_END
EXPORT KEY_EXIT
EXPORT KEY_FIND
EXPORT KEY_HELP
EXPORT KEY_MARK
EXPORT KEY_MESSAGE
EXPORT KEY_MOVE
EXPORT KEY_NEXT
EXPORT KEY_OPEN
EXPORT KEY_OPTIONS
EXPORT KEY_PREVIOUS
EXPORT KEY_REDO
EXPORT KEY_REFERENCE
EXPORT KEY_REFRESH
EXPORT KEY_REPLACE
EXPORT KEY_RESTART
EXPORT KEY_RESUME
EXPORT KEY_SAVE
EXPORT KEY_SBEG
EXPORT KEY_SCANCEL
EXPORT KEY_SCOMMAND
EXPORT KEY_SCOPY
EXPORT KEY_SCREATE
EXPORT KEY_SDC
EXPORT KEY_SDL
EXPORT KEY_SELECT
EXPORT KEY_SEND
EXPORT KEY_SEOL
EXPORT KEY_SEXIT
EXPORT KEY_SFIND
EXPORT KEY_SHOME
EXPORT KEY_SIC
EXPORT KEY_SLEFT
EXPORT KEY_SMESSAGE
EXPORT KEY_SMOVE
EXPORT KEY_SNEXT
EXPORT KEY_SOPTIONS
EXPORT KEY_SPREVIOUS
EXPORT KEY_SPRINT
EXPORT KEY_SREDO
EXPORT KEY_SREPLACE
EXPORT KEY_SRIGHT
EXPORT KEY_SRSUME
EXPORT KEY_SSAVE
EXPORT KEY_SSUSPEND
EXPORT KEY_SUNDO
EXPORT KEY_SUSPEND
EXPORT KEY_UNDO
EXPORT KEY_MIN
EXPORT KEY_MAX

EXPORT COLOR_PAIR
EXPORT Cols
EXPORT KEY_F
EXPORT Lines
EXPORT PAIR_NUMBER
EXPORT addch
EXPORT waddch
EXPORT mvaddch
EXPORT mvwaddch
EXPORT addchstr
EXPORT waddchstr
EXPORT mvaddchstr
EXPORT mvwaddchstr
EXPORT addstr
EXPORT waddstr
EXPORT mvaddstr
EXPORT mvwaddstr
EXPORT attroff
EXPORT wattroff
EXPORT attron
EXPORT wattron
EXPORT attrset
EXPORT wattrset
EXPORT baudrate
EXPORT beep
EXPORT bkgd
EXPORT wbkgd
EXPORT bkgdset
EXPORT wbkgdset
EXPORT border
EXPORT wborder
EXPORT box
EXPORT can_change_color
EXPORT cbreak
EXPORT nocbreak
EXPORT chgat
EXPORT wchgat
EXPORT mvchgat
EXPORT mvwchgat
EXPORT clear
EXPORT wclear
EXPORT clearok
EXPORT clrtobot
EXPORT wclrtobot
EXPORT clrtoeol
EXPORT wclrtoeol
EXPORT color_content
EXPORT color_set
EXPORT wcolor_set
EXPORT copywin
EXPORT curs_set
EXPORT curscr
EXPORT curses_version
EXPORT def_prog_mode
EXPORT def_shell_mode
EXPORT delay_output
EXPORT delch
EXPORT wdelch
EXPORT mvdelch
EXPORT mvwdelch
EXPORT deleteln
EXPORT wdeleteln
EXPORT delwin
EXPORT derwin
EXPORT doupdate
EXPORT dupwin
EXPORT echo
EXPORT noecho
EXPORT echochar
EXPORT wechochar
EXPORT endwin
EXPORT erase
EXPORT werase
EXPORT erasechar
EXPORT filter
EXPORT flash
EXPORT flushinp
EXPORT getbegx
EXPORT getbegy
EXPORT getbegyx
EXPORT getbkgd
EXPORT getch
EXPORT wgetch
EXPORT mvgetch
EXPORT mvwgetch
EXPORT getcurx
EXPORT getcury
EXPORT getmaxx
EXPORT getmaxy
EXPORT getmaxyx
EXPORT getnstr
EXPORT wgetnstr
EXPORT mvgetnstr
EXPORT mvwgetnstr
EXPORT getparx
EXPORT getpary
EXPORT getparyx
EXPORT getsyx
EXPORT getyx
EXPORT halfdelay
EXPORT has_colors
EXPORT has_ic
EXPORT has_il
EXPORT has_key
EXPORT hline
EXPORT whline
EXPORT mvhline
EXPORT mvwhline
EXPORT idcok
EXPORT idlok
EXPORT immedok
EXPORT inch
EXPORT winch
EXPORT mvinch
EXPORT mvwinch
EXPORT init_color
EXPORT init_pair
EXPORT initscr
EXPORT intrflush
EXPORT insch
EXPORT winsch
EXPORT mvinsch
EXPORT mvwinsch
EXPORT insdelln
EXPORT winsdelln
EXPORT insertln
EXPORT winsertln
EXPORT insstr
EXPORT winsstr
EXPORT mvinsstr
EXPORT mvwinsstr
EXPORT is_linetouched
EXPORT is_wintouched
EXPORT isendwin
EXPORT keyname
EXPORT keypad
EXPORT killchar
EXPORT leaveok
EXPORT longname
EXPORT meta
EXPORT move
EXPORT wmove
EXPORT mvderwin
EXPORT mvwin
EXPORT napms
EXPORT newpad
EXPORT newwin
EXPORT nl
EXPORT nonl
EXPORT nodelay
EXPORT noqiflush
EXPORT notimeout
EXPORT overlay
EXPORT overwrite
EXPORT pair_content
EXPORT pechochar
EXPORT pnoutrefresh
EXPORT prefresh
EXPORT qiflush
EXPORT raw
EXPORT noraw
EXPORT redrawwin
EXPORT refresh
EXPORT wnoutrefresh
EXPORT wrefresh
EXPORT reset_prog_mode
EXPORT reset_shell_mode
EXPORT resetty
EXPORT savetty
EXPORT scr_dump
EXPORT scr_init
EXPORT scr_restore
EXPORT scr_set
EXPORT scroll
EXPORT scrollok
EXPORT scrl
EXPORT wscrl
EXPORT setscrreg
EXPORT wsetscrreg
EXPORT setsyx
EXPORT standend
EXPORT wstandend
EXPORT standout
EXPORT wstandout
EXPORT start_color
EXPORT stdscr
EXPORT subpad
EXPORT subwin
EXPORT syncok
EXPORT termattrs
EXPORT termname
EXPORT timeout
EXPORT wtimeout
EXPORT touchline
EXPORT touchwin
EXPORT untouchwin
EXPORT unctrl
EXPORT ungetch
EXPORT use_env
EXPORT vline
EXPORT wvline
EXPORT mvvline
EXPORT mvwvline
EXPORT wcursyncup
EXPORT wredrawln
EXPORT wsyncdown
EXPORT wsyncup
EXPORT wtouchln

DECLARE EXTENSION CONSTANT CURSES_ERR: Number
DECLARE EXTENSION CONSTANT CURSES_OK: Number

TYPE Window IS POINTER

%|----------------------------------------------------------------------
 |
 |  Video Attributes
 |
 |%

DECLARE EXTENSION CONSTANT A_CHARTEXT         : Number
DECLARE EXTENSION CONSTANT A_NORMAL           : Number
DECLARE EXTENSION CONSTANT A_ALTCHARSET       : Number
DECLARE EXTENSION CONSTANT A_INVIS            : Number
DECLARE EXTENSION CONSTANT A_UNDERLINE        : Number
DECLARE EXTENSION CONSTANT A_REVERSE          : Number
DECLARE EXTENSION CONSTANT A_BLINK            : Number
DECLARE EXTENSION CONSTANT A_BOLD             : Number
DECLARE EXTENSION CONSTANT A_ATTRIBUTES       : Number
DECLARE EXTENSION CONSTANT A_COLOR            : Number
DECLARE EXTENSION CONSTANT A_PROTECT          : Number

%|----------------------------------------------------------------------
 |
 |  Box drawing characters
 |
 |%

DECLARE EXTENSION FUNCTION ACS_ULCORNER(): Number
DECLARE EXTENSION FUNCTION ACS_LLCORNER(): Number
DECLARE EXTENSION FUNCTION ACS_URCORNER(): Number
DECLARE EXTENSION FUNCTION ACS_LRCORNER(): Number
DECLARE EXTENSION FUNCTION ACS_RTEE(): Number
DECLARE EXTENSION FUNCTION ACS_LTEE(): Number
DECLARE EXTENSION FUNCTION ACS_BTEE(): Number
DECLARE EXTENSION FUNCTION ACS_TTEE(): Number
DECLARE EXTENSION FUNCTION ACS_HLINE(): Number
DECLARE EXTENSION FUNCTION ACS_VLINE(): Number
DECLARE EXTENSION FUNCTION ACS_PLUS(): Number

%|----------------------------------------------------------------------
 |
 |  Color Constants
 |
 |%

DECLARE EXTENSION CONSTANT COLOR_BLACK        : Number
DECLARE EXTENSION CONSTANT COLOR_BLUE         : Number
DECLARE EXTENSION CONSTANT COLOR_GREEN        : Number
DECLARE EXTENSION CONSTANT COLOR_RED          : Number
DECLARE EXTENSION CONSTANT COLOR_CYAN         : Number
DECLARE EXTENSION CONSTANT COLOR_MAGENTA      : Number
DECLARE EXTENSION CONSTANT COLOR_YELLOW       : Number
DECLARE EXTENSION CONSTANT COLOR_WHITE        : Number

%|----------------------------------------------------------------------
 |
 |  Keyboard, and Key Definitions.
 |
 |%

DECLARE EXTENSION CONSTANT KEY_CODE_YES       : Number % If get_wch() gives a key code

DECLARE EXTENSION CONSTANT KEY_BREAK          : Number % Not on PC KBD
DECLARE EXTENSION CONSTANT KEY_DOWN           : Number % Down arrow key
DECLARE EXTENSION CONSTANT KEY_UP             : Number % Up arrow key
DECLARE EXTENSION CONSTANT KEY_LEFT           : Number % Left arrow key
DECLARE EXTENSION CONSTANT KEY_RIGHT          : Number % Right arrow key
DECLARE EXTENSION CONSTANT KEY_HOME           : Number % home key
DECLARE EXTENSION CONSTANT KEY_BACKSPACE      : Number % not on pc
DECLARE EXTENSION CONSTANT KEY_F0             : Number % function keys; 64 reserved

DECLARE EXTENSION CONSTANT KEY_DL             : Number % delete line
DECLARE EXTENSION CONSTANT KEY_IL             : Number % insert line
DECLARE EXTENSION CONSTANT KEY_DC             : Number % delete character
DECLARE EXTENSION CONSTANT KEY_IC             : Number % insert char or enter ins mode
DECLARE EXTENSION CONSTANT KEY_EIC            : Number % exit insert char mode
DECLARE EXTENSION CONSTANT KEY_CLEAR          : Number % clear screen
DECLARE EXTENSION CONSTANT KEY_EOS            : Number % clear to end of screen
DECLARE EXTENSION CONSTANT KEY_EOL            : Number % clear to end of line
DECLARE EXTENSION CONSTANT KEY_SF             : Number % scroll 1 line forward
DECLARE EXTENSION CONSTANT KEY_SR             : Number % scroll 1 line back (reverse)
DECLARE EXTENSION CONSTANT KEY_NPAGE          : Number % next page
DECLARE EXTENSION CONSTANT KEY_PPAGE          : Number % previous page
DECLARE EXTENSION CONSTANT KEY_STAB           : Number % set tab
DECLARE EXTENSION CONSTANT KEY_CTAB           : Number % clear tab
DECLARE EXTENSION CONSTANT KEY_CATAB          : Number % clear all tabs
DECLARE EXTENSION CONSTANT KEY_ENTER          : Number % enter or send (unreliable)
DECLARE EXTENSION CONSTANT KEY_SRESET         : Number % soft/reset (partial/unreliable)
DECLARE EXTENSION CONSTANT KEY_RESET          : Number % reset/hard reset (unreliable)
DECLARE EXTENSION CONSTANT KEY_PRINT          : Number % print/copy
DECLARE EXTENSION CONSTANT KEY_LL             : Number % home down/bottom (lower left)
DECLARE EXTENSION CONSTANT KEY_SHELP          : Number % short help
DECLARE EXTENSION CONSTANT KEY_BTAB           : Number % Back tab key
DECLARE EXTENSION CONSTANT KEY_BEG            : Number % beg(inning) key
DECLARE EXTENSION CONSTANT KEY_CANCEL         : Number % cancel key
DECLARE EXTENSION CONSTANT KEY_CLOSE          : Number % close key
DECLARE EXTENSION CONSTANT KEY_COMMAND        : Number % cmd (command) key
DECLARE EXTENSION CONSTANT KEY_COPY           : Number % copy key
DECLARE EXTENSION CONSTANT KEY_CREATE         : Number % create key
DECLARE EXTENSION CONSTANT KEY_END            : Number % end key
DECLARE EXTENSION CONSTANT KEY_EXIT           : Number % exit key
DECLARE EXTENSION CONSTANT KEY_FIND           : Number % find key
DECLARE EXTENSION CONSTANT KEY_HELP           : Number % help key
DECLARE EXTENSION CONSTANT KEY_MARK           : Number % mark key
DECLARE EXTENSION CONSTANT KEY_MESSAGE        : Number % message key
DECLARE EXTENSION CONSTANT KEY_MOVE           : Number % move key
DECLARE EXTENSION CONSTANT KEY_NEXT           : Number % next object key
DECLARE EXTENSION CONSTANT KEY_OPEN           : Number % open key
DECLARE EXTENSION CONSTANT KEY_OPTIONS        : Number % options key
DECLARE EXTENSION CONSTANT KEY_PREVIOUS       : Number % previous object key
DECLARE EXTENSION CONSTANT KEY_REDO           : Number % redo key
DECLARE EXTENSION CONSTANT KEY_REFERENCE      : Number % ref(erence) key
DECLARE EXTENSION CONSTANT KEY_REFRESH        : Number % refresh key
DECLARE EXTENSION CONSTANT KEY_REPLACE        : Number % replace key
DECLARE EXTENSION CONSTANT KEY_RESTART        : Number % restart key
DECLARE EXTENSION CONSTANT KEY_RESUME         : Number % resume key
DECLARE EXTENSION CONSTANT KEY_SAVE           : Number % save key
DECLARE EXTENSION CONSTANT KEY_SBEG           : Number % shifted beginning key
DECLARE EXTENSION CONSTANT KEY_SCANCEL        : Number % shifted cancel key
DECLARE EXTENSION CONSTANT KEY_SCOMMAND       : Number % shifted command key
DECLARE EXTENSION CONSTANT KEY_SCOPY          : Number % shifted copy key
DECLARE EXTENSION CONSTANT KEY_SCREATE        : Number % shifted create key
DECLARE EXTENSION CONSTANT KEY_SDC            : Number % shifted delete char key
DECLARE EXTENSION CONSTANT KEY_SDL            : Number % shifted delete line key
DECLARE EXTENSION CONSTANT KEY_SELECT         : Number % select key
DECLARE EXTENSION CONSTANT KEY_SEND           : Number % shifted end key
DECLARE EXTENSION CONSTANT KEY_SEOL           : Number % shifted clear line key
DECLARE EXTENSION CONSTANT KEY_SEXIT          : Number % shifted exit key
DECLARE EXTENSION CONSTANT KEY_SFIND          : Number % shifted find key
DECLARE EXTENSION CONSTANT KEY_SHOME          : Number % shifted home key
DECLARE EXTENSION CONSTANT KEY_SIC            : Number % shifted input key

DECLARE EXTENSION CONSTANT KEY_SLEFT          : Number % shifted left arrow key
DECLARE EXTENSION CONSTANT KEY_SMESSAGE       : Number % shifted message key
DECLARE EXTENSION CONSTANT KEY_SMOVE          : Number % shifted move key
DECLARE EXTENSION CONSTANT KEY_SNEXT          : Number % shifted next key
DECLARE EXTENSION CONSTANT KEY_SOPTIONS       : Number % shifted options key
DECLARE EXTENSION CONSTANT KEY_SPREVIOUS      : Number % shifted prev key
DECLARE EXTENSION CONSTANT KEY_SPRINT         : Number % shifted print key
DECLARE EXTENSION CONSTANT KEY_SREDO          : Number % shifted redo key
DECLARE EXTENSION CONSTANT KEY_SREPLACE       : Number % shifted replace key
DECLARE EXTENSION CONSTANT KEY_SRIGHT         : Number % shifted right arrow
DECLARE EXTENSION CONSTANT KEY_SRSUME         : Number % shifted resume key
DECLARE EXTENSION CONSTANT KEY_SSAVE          : Number % shifted save key
DECLARE EXTENSION CONSTANT KEY_SSUSPEND       : Number % shifted suspend key
DECLARE EXTENSION CONSTANT KEY_SUNDO          : Number % shifted undo key
DECLARE EXTENSION CONSTANT KEY_SUSPEND        : Number % suspend key
DECLARE EXTENSION CONSTANT KEY_UNDO           : Number % undo key

DECLARE EXTENSION CONSTANT KEY_MIN            : Number % Minimum curses key value
DECLARE EXTENSION CONSTANT KEY_MAX            : Number % Maximum curses key

%|----------------------------------------------------------------------
 |
 |  Curses functions
 |
 |%

DECLARE EXTENSION FUNCTION COLOR_PAIR(n: Number): Number
DECLARE EXTENSION FUNCTION Cols(): Number
DECLARE EXTENSION FUNCTION KEY_F(n: Number): Number
DECLARE EXTENSION FUNCTION Lines(): Number
DECLARE EXTENSION FUNCTION PAIR_NUMBER(n: Number): Number

DECLARE EXTENSION FUNCTION addch(ch: Number)
DECLARE EXTENSION FUNCTION waddch(win: Window, ch: Number)
DECLARE EXTENSION FUNCTION mvaddch(y: Number, x: Number, ch: Number)
DECLARE EXTENSION FUNCTION mvwaddch(win: Window, y: Number, x: Number, ch: Number)
DECLARE EXTENSION FUNCTION addchstr(chstr: Array<Number>)
DECLARE EXTENSION FUNCTION waddchstr(win: Window, chstr: Array<Number>)
DECLARE EXTENSION FUNCTION mvaddchstr(y: Number, x: Number, chstr: Array<Number>)
DECLARE EXTENSION FUNCTION mvwaddchstr(win: Window, y: Number, x: Number, chstr: Array<Number>)
DECLARE EXTENSION FUNCTION addstr(s: String)
DECLARE EXTENSION FUNCTION waddstr(win: Window, s: String)
DECLARE EXTENSION FUNCTION mvaddstr(y: Number, x: Number, s: String)
DECLARE EXTENSION FUNCTION mvwaddstr(win: Window, y: Number, x: Number, s: String)
DECLARE EXTENSION FUNCTION attroff(attrs: Number)
DECLARE EXTENSION FUNCTION wattroff(win: Window, attrs: Number)
DECLARE EXTENSION FUNCTION attron(attrs: Number)
DECLARE EXTENSION FUNCTION wattron(win: Window, attrs: Number)
DECLARE EXTENSION FUNCTION attrset(attrs: Number)
DECLARE EXTENSION FUNCTION wattrset(win: Window, attrs: Number)
DECLARE EXTENSION FUNCTION baudrate(): Number
DECLARE EXTENSION FUNCTION beep()
DECLARE EXTENSION FUNCTION bkgd(ch: Number)
DECLARE EXTENSION FUNCTION wbkgd(win: Window, ch: Number)
DECLARE EXTENSION FUNCTION bkgdset(ch: Number)
DECLARE EXTENSION FUNCTION wbkgdset(win: Window, ch: Number)
DECLARE EXTENSION FUNCTION border(ls: Number, rs: Number, ts: Number, bs: Number, tl: Number, tr: Number, bl: Number, br: Number)
DECLARE EXTENSION FUNCTION wborder(win: Window, ls: Number, rs: Number, ts: Number, bs: Number, tl: Number, tr: Number, bl: Number, br: Number)
DECLARE EXTENSION FUNCTION box(win: Window, verch: Number, horch: Number)
DECLARE EXTENSION FUNCTION can_change_color(): Boolean
DECLARE EXTENSION FUNCTION cbreak()
DECLARE EXTENSION FUNCTION nocbreak()
DECLARE EXTENSION FUNCTION chgat(n: Number, attr: Number, color: Number, opts: POINTER)
DECLARE EXTENSION FUNCTION wchgat(win: Window, n: Number, attr: Number, color: Number, opts: POINTER)
DECLARE EXTENSION FUNCTION mvchgat(y: Number, x: Number, n: Number, attr: Number, color: Number, opts: POINTER)
DECLARE EXTENSION FUNCTION mvwchgat(win: Window, y: Number, x: Number, n: Number, attr: Number, color: Number, opts: POINTER)
DECLARE EXTENSION FUNCTION clear()
DECLARE EXTENSION FUNCTION wclear(win: Window)
DECLARE EXTENSION FUNCTION clearok(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION clrtobot()
DECLARE EXTENSION FUNCTION wclrtobot(win: Window)
DECLARE EXTENSION FUNCTION clrtoeol()
DECLARE EXTENSION FUNCTION wclrtoeol(win: Window)
DECLARE EXTENSION FUNCTION color_content(color: Number): Array<Number>
DECLARE EXTENSION FUNCTION color_set(color_pair_number: Number, opts: POINTER)
DECLARE EXTENSION FUNCTION wcolor_set(win: Window, color_pair_number: Number, opts: POINTER)
DECLARE EXTENSION FUNCTION copywin(srcwin: Window, dstwin: Window, sminrow: Number, smincol: Number, dminrow: Number, dmincol: Number, dmaxrow: Number, dmaxcol: Number, overlay: Boolean)
DECLARE EXTENSION FUNCTION curs_set(visibility: Number)
DECLARE EXTENSION FUNCTION curscr(): Window
DECLARE EXTENSION FUNCTION curses_version(): String
DECLARE EXTENSION FUNCTION def_prog_mode()
DECLARE EXTENSION FUNCTION def_shell_mode()
DECLARE EXTENSION FUNCTION delay_output(ms: Number)
DECLARE EXTENSION FUNCTION delch()
DECLARE EXTENSION FUNCTION wdelch(win: Window)
DECLARE EXTENSION FUNCTION mvdelch(y: Number, x: Number)
DECLARE EXTENSION FUNCTION mvwdelch(win: Window, y: Number, x: Number)
DECLARE EXTENSION FUNCTION deleteln()
DECLARE EXTENSION FUNCTION wdeleteln(win: Window)
DECLARE EXTENSION FUNCTION delwin(win: Window)
DECLARE EXTENSION FUNCTION derwin(orig: Window, nlines: Number, ncols: Number, begin_y: Number, begin_x: Number): Window
DECLARE EXTENSION FUNCTION doupdate()
DECLARE EXTENSION FUNCTION dupwin(win: Window): Window
DECLARE EXTENSION FUNCTION echo()
DECLARE EXTENSION FUNCTION noecho()
DECLARE EXTENSION FUNCTION echochar(ch: Number)
DECLARE EXTENSION FUNCTION wechochar(win: Window, ch: Number)
DECLARE EXTENSION FUNCTION endwin()
DECLARE EXTENSION FUNCTION erase()
DECLARE EXTENSION FUNCTION werase(win: Window)
DECLARE EXTENSION FUNCTION erasechar(): String
DECLARE EXTENSION FUNCTION filter()
DECLARE EXTENSION FUNCTION flash()
DECLARE EXTENSION FUNCTION flushinp()
DECLARE EXTENSION FUNCTION getbegx(win: Window): Number
DECLARE EXTENSION FUNCTION getbegy(win: Window): Number
DECLARE EXTENSION FUNCTION getbegyx(win: Window): Array<Number>
DECLARE EXTENSION FUNCTION getbkgd(win: Window): Number
DECLARE EXTENSION FUNCTION getch(): Number
DECLARE EXTENSION FUNCTION wgetch(win: Window): Number
DECLARE EXTENSION FUNCTION mvgetch(y: Number, x: Number): Number
DECLARE EXTENSION FUNCTION mvwgetch(win: Window, y: Number, x: Number): Number
DECLARE EXTENSION FUNCTION getcurx(win: Window): Number
DECLARE EXTENSION FUNCTION getcury(win: Window): Number
DECLARE EXTENSION FUNCTION getmaxx(win: Window): Number
DECLARE EXTENSION FUNCTION getmaxy(win: Window): Number
DECLARE EXTENSION FUNCTION getmaxyx(win: Window): Array<Number>
DECLARE EXTENSION FUNCTION getnstr(n: Number): String
DECLARE EXTENSION FUNCTION wgetnstr(win: Window, n: Number): String
DECLARE EXTENSION FUNCTION mvgetnstr(y: Number, x: Number, n: Number): String
DECLARE EXTENSION FUNCTION mvwgetnstr(win: Window, y: Number, x: Number, n: Number): String
DECLARE EXTENSION FUNCTION getparx(win: Window): Number
DECLARE EXTENSION FUNCTION getpary(win: Window): Number
DECLARE EXTENSION FUNCTION getparyx(win: Window): Array<Number>
DECLARE EXTENSION FUNCTION getsyx(): Array<Number>
DECLARE EXTENSION FUNCTION getyx(win: Window): Array<Number>
DECLARE EXTENSION FUNCTION halfdelay(tenths: Number)
DECLARE EXTENSION FUNCTION has_colors(): Boolean
DECLARE EXTENSION FUNCTION has_ic(): Boolean
DECLARE EXTENSION FUNCTION has_il(): Boolean
DECLARE EXTENSION FUNCTION has_key(ch: Number): Boolean
DECLARE EXTENSION FUNCTION hline(ch: Number, n: Number)
DECLARE EXTENSION FUNCTION whline(win: Window, ch: Number, n: Number)
DECLARE EXTENSION FUNCTION mvhline(y: Number, x: Number, ch: Number, n: Number)
DECLARE EXTENSION FUNCTION mvwhline(win: Window, y: Number, x: Number, ch: Number, n: Number)
DECLARE EXTENSION FUNCTION idcok(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION idlok(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION immedok(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION inch(): Number
DECLARE EXTENSION FUNCTION winch(win: Window): Number
DECLARE EXTENSION FUNCTION mvinch(y: Number, x: Number): Number
DECLARE EXTENSION FUNCTION mvwinch(win: Window, y: Number, x: Number): Number
DECLARE EXTENSION FUNCTION init_color(pair: Number, r: Number, g: Number, b: Number)
DECLARE EXTENSION FUNCTION init_pair(pair: Number, f: Number, b: Number)
DECLARE EXTENSION FUNCTION initscr()
DECLARE EXTENSION FUNCTION intrflush(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION insch(ch: Number)
DECLARE EXTENSION FUNCTION winsch(win: Window, ch: Number)
DECLARE EXTENSION FUNCTION mvinsch(y: Number, x: Number, ch: Number)
DECLARE EXTENSION FUNCTION mvwinsch(win: Window, y: Number, x: Number, ch: Number)
DECLARE EXTENSION FUNCTION insdelln(n: Number)
DECLARE EXTENSION FUNCTION winsdelln(win: Window, n: Number)
DECLARE EXTENSION FUNCTION insertln()
DECLARE EXTENSION FUNCTION winsertln(win: Window)
DECLARE EXTENSION FUNCTION insstr(s: String)
DECLARE EXTENSION FUNCTION winsstr(win: Window, s: String)
DECLARE EXTENSION FUNCTION mvinsstr(y: Number, x: Number, s: String)
DECLARE EXTENSION FUNCTION mvwinsstr(win: Window, y: Number, x: Number, s: String)
DECLARE EXTENSION FUNCTION is_linetouched(win: Window, line: Number): Boolean
DECLARE EXTENSION FUNCTION is_wintouched(win: Window): Boolean
DECLARE EXTENSION FUNCTION isendwin(): Boolean
DECLARE EXTENSION FUNCTION keyname(c: Number): String
DECLARE EXTENSION FUNCTION keypad(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION killchar(): String
DECLARE EXTENSION FUNCTION leaveok(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION longname(): String
DECLARE EXTENSION FUNCTION meta(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION move(y: Number, x: Number)
DECLARE EXTENSION FUNCTION wmove(win: Window, y: Number, x: Number)
DECLARE EXTENSION FUNCTION mvderwin(win: Window, par_y: Number, par_x: Number)
DECLARE EXTENSION FUNCTION mvwin(win: Window, y: Number, x: Number)
DECLARE EXTENSION FUNCTION napms(ms: Number)
DECLARE EXTENSION FUNCTION newpad(nlines: Number, ncols: Number): Window
DECLARE EXTENSION FUNCTION newwin(nlines: Number, ncols: Number, begin_y: Number, begin_x: Number): Window
DECLARE EXTENSION FUNCTION nl()
DECLARE EXTENSION FUNCTION nonl()
DECLARE EXTENSION FUNCTION nodelay(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION noqiflush()
DECLARE EXTENSION FUNCTION notimeout(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION overlay(srcwin: Window, dstwin: Window)
DECLARE EXTENSION FUNCTION overwrite(srcwin: Window, dstwin: Window)
DECLARE EXTENSION FUNCTION pair_content(color: Number): Array<Number>
DECLARE EXTENSION FUNCTION pechochar(pad: Window, ch: Number)
DECLARE EXTENSION FUNCTION pnoutrefresh(pad: Window, pminrow: Number, pmincol: Number, sminrow: Number, smincol: Number, smaxrow: Number, smaxcol: Number)
DECLARE EXTENSION FUNCTION prefresh(pad: Window, pminrow: Number, pmincol: Number, sminrow: Number, smincol: Number, smaxrow: Number, smaxcol: Number)
DECLARE EXTENSION FUNCTION qiflush()
DECLARE EXTENSION FUNCTION raw()
DECLARE EXTENSION FUNCTION noraw()
DECLARE EXTENSION FUNCTION redrawwin(win: Window)
DECLARE EXTENSION FUNCTION refresh()
DECLARE EXTENSION FUNCTION wnoutrefresh(win: Window)
DECLARE EXTENSION FUNCTION wrefresh(win: Window)
DECLARE EXTENSION FUNCTION reset_prog_mode()
DECLARE EXTENSION FUNCTION reset_shell_mode()
DECLARE EXTENSION FUNCTION resetty()
DECLARE EXTENSION FUNCTION savetty()
DECLARE EXTENSION FUNCTION scr_dump(filename: String)
DECLARE EXTENSION FUNCTION scr_init(filename: String)
DECLARE EXTENSION FUNCTION scr_restore(filename: String)
DECLARE EXTENSION FUNCTION scr_set(filename: String)
DECLARE EXTENSION FUNCTION scroll(win: Window)
DECLARE EXTENSION FUNCTION scrollok(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION scrl(n: Number)
DECLARE EXTENSION FUNCTION wscrl(win: Window, n: Number)
DECLARE EXTENSION FUNCTION setscrreg(top: Number, bottom: Number)
DECLARE EXTENSION FUNCTION wsetscrreg(win: Window, top: Number, bottom: Number)
DECLARE EXTENSION FUNCTION setsyx(y: Number, x: Number)
DECLARE EXTENSION FUNCTION standend()
DECLARE EXTENSION FUNCTION wstandend(win: Window)
DECLARE EXTENSION FUNCTION standout()
DECLARE EXTENSION FUNCTION wstandout(win: Window)
DECLARE EXTENSION FUNCTION start_color()
DECLARE EXTENSION FUNCTION stdscr(): Window
DECLARE EXTENSION FUNCTION subpad(orig: Window, nlines: Number, ncols: Number, begin_y: Number, begin_x: Number): Window
DECLARE EXTENSION FUNCTION subwin(orig: Window, nlines: Number, ncols: Number, begin_y: Number, begin_x: Number): Window
DECLARE EXTENSION FUNCTION syncok(win: Window, bf: Boolean)
DECLARE EXTENSION FUNCTION termattrs(): Number
DECLARE EXTENSION FUNCTION termname(): String
DECLARE EXTENSION FUNCTION timeout(delay: Number)
DECLARE EXTENSION FUNCTION wtimeout(win: Window, delay: Number)
DECLARE EXTENSION FUNCTION touchline(win: Window, start: Number, count: Number)
DECLARE EXTENSION FUNCTION touchwin(win: Window)
DECLARE EXTENSION FUNCTION untouchwin(win: Window)
DECLARE EXTENSION FUNCTION unctrl(c: Number): String
DECLARE EXTENSION FUNCTION ungetch(ch: Number)
DECLARE EXTENSION FUNCTION use_env(f: Boolean)
DECLARE EXTENSION FUNCTION vline(ch: Number, n: Number)
DECLARE EXTENSION FUNCTION wvline(win: Window, ch: Number, n: Number)
DECLARE EXTENSION FUNCTION mvvline(y: Number, x: Number, ch: Number, n: Number)
DECLARE EXTENSION FUNCTION mvwvline(win: Window, y: Number, x: Number, ch: Number, n: Number)
DECLARE EXTENSION FUNCTION wcursyncup(win: Window)
DECLARE EXTENSION FUNCTION wredrawln(win: Window, beg_line: Number, num_lines: Number)
DECLARE EXTENSION FUNCTION wsyncdown(win: Window)
DECLARE EXTENSION FUNCTION wsyncup(win: Window)
DECLARE EXTENSION FUNCTION wtouchln(win: Window, y: Number, n: Number, changed: Boolean)
